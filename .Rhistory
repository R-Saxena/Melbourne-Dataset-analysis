wd
wd(
)
getwd()
library(dplyr)
studID <- 2020280424
studID <- 2020280424
set.seed (studID)
n <- 3000
a <- 2
b1 <- 4
b2 <- -3
e <- rnorm(n)
x1 <- rnorm(n)
x2 <- rbinom(n, size=1, prob=0.37)
y <- a + b1*x1 + b2*x2 + e
print(a)
print(b1)
print(e)
hist(e)
hist(x1)
hist(x2)
print(x2)
x2 <- rbinom(n, size=10, prob=0.37)
print(x2)
x2 <- rbinom(n, size=1, prob=0.37)
x2y <- a + b1*x1 + b2*x2 + e
x2
x2y <- a + b1*x1 + b2*x2 + e
x2y
hist(x2y)
ols(x2y)
y <- a + b1*x1 + b2*x2 + e
dat <- cbind.data.frame (y, x1, x2)
dat <- cbind.data.frame (y, x1, x2)
dat
getwd()
setwd('C:/Windows/System32/cmd.exe')
getwd()
setwd('C:/Windows/System32/cmd.exe')
setwd('C://Windows/System32/cmd.exe')
pairs(mel_house_data_clean[], pch = 19)
require(tidyverse)
require(ISLR)
require(MASS)
mel_data <- read.csv('melbourne_data.csv', header = T, stringsAsFactors = F)
mel_house_data <- data.frame(mel_data, stringsAsFactors = F)
class(mel_house_data)
#visualizing the dataset
head(mel_house_data)
View(mel_house_data)
##Seeing all the column names
colnames(mel_house_data)
#finding out the structure of the melbourne dataset
str(mel_house_data)
#Descriptive Analysis
summary(mel_house_data)
#importing library
library(ggplot2)
mel_data <- read.csv('melbourne_data.csv', header = T, stringsAsFactors = F)
getwd()
setwd('C:\Users\rishabhsaxena01\Desktop\Extra Work\Gayathri\my work')
setwd('C:/Users/rishabhsaxena01/Desktop/Extra Work/Gayathri/my work')
getwd()
require(tidyverse)
require(ISLR)
require(MASS)
require(tidyverse)
require(ISLR)
require(MASS)
mel_data <- read.csv('melbourne_data.csv', header = T, stringsAsFactors = F)
mel_house_data <- data.frame(mel_data, stringsAsFactors = F)
class(mel_house_data)
#visualizing the dataset
head(mel_house_data)
##Seeing all the column names
colnames(mel_house_data)
#finding out the structure of the melbourne dataset
str(mel_house_data)
#Descriptive Analysis
summary(mel_house_data)
#importing library
library(ggplot2)
mel_house_data <- data.frame(lapply(mel_house_data,function(x) { gsub("#N/A", NA, x) }))
class(mel_house_data)
#Finding Count of Na values in each column
NA_count_of_each_col<-sapply(mel_house_data,function(x) sum(is.na(x)==TRUE))
NA_count_of_each_col
for(i in 1:ncol(mel_house_data)) {
colName <- colnames(mel_house_data[i])
pctNull <- sum(is.na(mel_house_data[,i]))/length(mel_house_data[,i])
if (pctNull > 0.50) {
print(paste("Column ", colName, " has ", round(pctNull*100, 3), "% of nulls"))
}
}
mel_house_data[,c("BuildingArea","YearBuilt")]<-NULL
mel_house_data_clean<-na.exclude(mel_house_data)
mel_house_data_clean$Type<-as.factor(mel_house_data_clean$Type)
mel_house_data_clean$Propertycount<-as.numeric(mel_house_data_clean$Propertycount)
mel_house_data_clean$Regionname<-as.factor(mel_house_data_clean$Regionname)
mel_house_data_clean$Distance<-as.numeric(mel_house_data_clean$Distance)
mel_house_data_clean$Price<-as.numeric(mel_house_data_clean$Price)
mel_house_data_clean$Landsize <- as.numeric(mel_house_data_clean$Landsize)
mel_house_data_clean$Car <- as.numeric(mel_house_data_clean$Car)
mel_house_data_clean$Bathroom <- as.numeric(mel_house_data_clean$Bathroom)
mel_house_data_clean$Rooms <- as.numeric(mel_house_data_clean$Rooms)
head(mel_house_data_clean)
#treating the date variable
datetext <- as.Date(mel_house_data_clean$Date, "%d/%m/%Y")
#Split Date into the Day, Month, Year
df <- data.frame(Date = datetext,
year = as.numeric(format(datetext, format = "%Y")),
month = as.numeric(format(datetext, format = "%m")),
day = as.numeric(format(datetext, format = "%d")))
mel_house_data_clean$year <- as.factor(df$year)
mel_house_data_clean$month <- as.factor(df$month)
mel_house_data_clean$day <- df$day
#Remove Date
mel_house_data_clean$Date <- NULL
head(mel_house_data_clean)
#making boxplot of price range in different regions
par(mar=c(3.1,12,4.1,2.1), mgp = c(11, 1, 0))
boxplot(mel_house_data_clean$Price ~ mel_house_data_clean$Regionname,horizontal = TRUE,  ylab = "Region Name", xlab = "Price of houses", main = "Boxplot of price of houses by region", las = 1)
#Boxplot of distance vs type of houses
boxplot(mel_house_data_clean$Distance ~ mel_house_data_clean$Type, horizontal = TRUE, ylab = "Type of House", xlab = "Distance", main = "Boxplot of distance vs type of houses", las = 1)
#columns in the clean dataset
colnames(mel_house_data_clean)
#structure of the clean dataset
str(mel_house_data_clean)
#descriptive Summary of the clean dataset
summary(mel_house_data_clean)
#pie chart
pie(table(mel_house_data_clean$Type),
labels=table(mel_house_data_clean$Type),
main="House type Breakdown",
col=c("red","green","blue"),
border="brown",
clockwise=TRUE
)
# Distribution of Rooms in the houses:
ggplot(data =mel_house_data_clean) +
geom_bar(mapping = aes(x = Rooms),position = "dodge")
#Scatterplot
plot(x = mel_house_data_clean$Price,y = mel_house_data_clean$Landsize,
xlab = "Price of the house",
ylab = "LandSize of the house",
main = "Price vs LandSize"
)
#Histograms
#seeing the distribution of all the variables
par(mfrow = c(2,2), mar=c(3.1,3.1,0.95,0))
hist(mel_house_data_clean$Distance, breaks = 40, xlim = c(0,50), ylim = c(0,800),xlab = "Distance", col = "Red", main = "Histogram of Distances", las =1)
hist(mel_house_data_clean$Rooms, breaks = 40, xlim = c(0,10), ylim = c(0,4000),xlab = "No. of Rooms", col = "Green", main = "Histogram of no. of Rooms in houses", las =1)
hist(mel_house_data_clean$Bathroom, breaks = 40, xlim = c(0,10), ylim = c(0,4000),xlab = "No. of Bathrooms", col = "Blue", main = "Histogram of no. of bathrooms in the houses", las =1)
hist(mel_house_data_clean$Car, breaks = 40, xlim = c(0,10), ylim = c(0,4000),xlab = "No. of Carslots", col = "Yellow", main = "Histogram of no. of carslots in houses", las =1)
hist(mel_house_data_clean$Price, main = "Distribution of Price Variable")
#Group houses by some price ranges ( like low, medium, high,etc.) and summarise those groups separately
low <- mel_house_data_clean%>%filter(Price < 1000)
med <- mel_house_data_clean%>%filter(Price > 1000 & Price < 2000)
high <- mel_house_data_clean%>%filter(Price > 2000)
hist(low$Price, main = "Distribution of low Price houses")
hist(med$Price, main = "Distribution of medium Price houses")
hist(high$Price, main = "Distribution of high Price houses")
boxplot(mel_house_data_clean$Price ~ mel_house_data_clean$Type, horizontal = FALSE,  ylab = "Type of house", xlab = "Price of houses", main = "Boxplot of price of houses by Type", las = 1)
### Distribution of different Type of houses over the regions:
ggplot(data =mel_house_data_clean) +
geom_bar(mapping = aes(x = Regionname, fill = Type),position = "dodge")
#How different attributes are correlated with the price? Which of the variables are correlated the most with price?
library(corrplot)
cor_data<- as.data.frame(mel_house_data_clean[,c(2:7,9,12)])
corrplot(cor(as.matrix(cor_data)), method = "pie", type="lower")
#step-4
#List the frequencies of houses for various types. Create 2 scatterplots and colour the house price by landsize and type.
table(mel_house_data_clean$Type)
plot(x = mel_house_data_clean$Price,y = mel_house_data_clean$Landsize,
xlab = "Price of the house",
ylab = "LandSize of the house",
main = "Price vs LandSize"
)
pairs(mel_house_data_clean[], pch = 19)
pairs(mel_house_data_clean[,c(2:7)], pch = 19)
plot(x = mel_house_data_clean$Price,y = mel_house_data_clean$Landsize,
xlab = "Price of the house",
ylab = "LandSize of the house",
main = "Price vs LandSize"
col = mel_house_data_clean$Type
)
plot(x = mel_house_data_clean$Price,y = mel_house_data_clean$Landsize,
xlab = "Price of the house",
ylab = "LandSize of the house",
main = "Price vs LandSize"
col = mel_house_data_clean$Type
)
plot(x = mel_house_data_clean$Price,y = mel_house_data_clean$Landsize,
xlab = "Price of the house",
ylab = "LandSize of the house",
main = "Price vs LandSize",
col = mel_house_data_clean$Type
)
plot(x = mel_house_data_clean$Price,y = mel_house_data_clean$Type,
xlab = "Price of the house",
ylab = "LandSize of the house",
main = "Price vs LandSize",
col = mel_house_data_clean$Type
)
hist(mel_house_data_clean$Car, breaks = 40, xlim = c(0,10), ylim = c(0,4000),xlab = "No. of Carslots", col = "Yellow", main = "Histogram of no. of carslots in houses", las =1)
hist(mel_house_data_clean$Type, breaks = 40, xlim = c(0,10), ylim = c(0,4000),xlab = "No. of Carslots", col = "Yellow", main = "Histogram of no. of carslots in houses", las =1)
plot(x = mel_house_data_clean$Price,y = mel_house_data_clean$Landsize,
xlab = "Price of the house",
ylab = "LandSize of the house",
main = "Price vs LandSize",
col = mel_house_data_clean$Type
)
plot(x = mel_house_data_clean$Price,y = mel_house_data_clean$Landsize,
xlab = "Price of the house",
ylab = "LandSize of the house",
main = "Price vs LandSize",
col = mel_house_data_clean$Type
legend = c('h','t','u')
)
plot(x = mel_house_data_clean$Price,y = mel_house_data_clean$Landsize,
xlab = "Price of the house",
ylab = "LandSize of the house",
main = "Price vs LandSize",
col = mel_house_data_clean$Type,
legend = c('h','t','u')
)
knitr::opts_chunk$set(echo = TRUE)
mel_data <- read.csv('melbourne_data.csv', header = T, stringsAsFactors = F)
mel_house_data <- data.frame(mel_data, stringsAsFactors = F)
class(mel_house_data)
require(tidyverse)
require(ISLR)
require(MASS)
head(mel_house_data)
View(mel_house_data)
colnames(mel_house_data)
str(mel_house_data)
summary(mel_house_data)
library(ggplot2)
mel_house_data <- data.frame(lapply(mel_house_data,function(x) { gsub("#N/A", NA, x) }))
class(mel_house_data)
NA_count_of_each_col<-sapply(mel_house_data,function(x) sum(is.na(x)==TRUE))
NA_count_of_each_col
for(i in 1:ncol(mel_house_data)) {
colName <- colnames(mel_house_data[i])
pctNull <- sum(is.na(mel_house_data[,i]))/length(mel_house_data[,i])
if (pctNull > 0.50) {
print(paste("Column ", colName, " has ", round(pctNull*100, 3), "% of nulls"))
}
}
mel_house_data[,c("BuildingArea","YearBuilt")]<-NULL
mel_house_data_clean$Rooms <- as.numeric(mel_house_data_clean$Rooms)
head(mel_house_data_clean)
datetext <- as.Date(mel_house_data_clean$Date, "%d/%m/%Y")
datetext <- as.Date(mel_house_data_clean$Date, "%d/%m/%Y")
par(mar=c(3.1,12,4.1,2.1), mgp = c(11, 1, 0))
boxplot(mel_house_data_clean$Price ~ mel_house_data_clean$Regionname,horizontal = TRUE,  ylab = "Region Name", xlab = "Price of houses", main = "Boxplot of price of houses by region", las = 1)
boxplot(mel_house_data_clean$Distance ~ mel_house_data_clean$Type, horizontal = TRUE, ylab = "Type of House", xlab = "Distance", main = "Boxplot of distance vs type of houses", las = 1)
colnames(mel_house_data_clean)
mel_data <- read.csv('melbourne_data.csv', header = T, stringsAsFactors = F)
mel_house_data <- data.frame(mel_data, stringsAsFactors = F)
class(mel_house_data)
head(mel_house_data)
View(mel_house_data)
colnames(mel_house_data)
str(mel_house_data)
summary(mel_house_data)
library(ggplot2)
mel_house_data <- data.frame(lapply(mel_house_data,function(x) { gsub("#N/A", NA, x) }))
class(mel_house_data)
NA_count_of_each_col<-sapply(mel_house_data,function(x) sum(is.na(x)==TRUE))
NA_count_of_each_col
for(i in 1:ncol(mel_house_data)) {
colName <- colnames(mel_house_data[i])
pctNull <- sum(is.na(mel_house_data[,i]))/length(mel_house_data[,i])
if (pctNull > 0.50) {
print(paste("Column ", colName, " has ", round(pctNull*100, 3), "% of nulls"))
}
}
mel_house_data[,c("BuildingArea","YearBuilt")]<-NULL
mel_house_data_clean<-na.exclude(mel_house_data)
mel_house_data_clean$Type<-as.factor(mel_house_data_clean$Type)
mel_house_data_clean$Propertycount<-as.numeric(mel_house_data_clean$Propertycount)
mel_house_data_clean$Regionname<-as.factor(mel_house_data_clean$Regionname)
mel_house_data_clean$Distance<-as.numeric(mel_house_data_clean$Distance)
mel_house_data_clean$Price<-as.numeric(mel_house_data_clean$Price)
mel_house_data_clean$Landsize <- as.numeric(mel_house_data_clean$Landsize)
mel_house_data_clean$Car <- as.numeric(mel_house_data_clean$Car)
mel_house_data_clean$Bathroom <- as.numeric(mel_house_data_clean$Bathroom)
mel_house_data_clean$Rooms <- as.numeric(mel_house_data_clean$Rooms)
head(mel_house_data_clean)
par(mar=c(3.1,12,4.1,2.1), mgp = c(11, 1, 0))
boxplot(mel_house_data_clean$Price ~ mel_house_data_clean$Regionname,horizontal = TRUE,  ylab = "Region Name", xlab = "Price of houses", main = "Boxplot of price of houses by region", las = 1)
boxplot(mel_house_data_clean$Distance ~ mel_house_data_clean$Type, horizontal = TRUE, ylab = "Type of House", xlab = "Distance", main = "Boxplot of distance vs type of houses", las = 1)
colnames(mel_house_data_clean)
str(mel_house_data_clean)
summary(mel_house_data_clean)
pie(table(mel_house_data_clean$Type),
labels=table(mel_house_data_clean$Type),
main="House type Breakdown",
col=c("red","green","blue"),
border="brown",
clockwise=TRUE
)
ggplot(data =mel_house_data_clean) +
geom_bar(mapping = aes(x = Rooms),position = "dodge")
plot(x = mel_house_data_clean$Price,y = mel_house_data_clean$Landsize,
xlab = "Price of the house",
ylab = "LandSize of the house",
main = "Price vs LandSize"
)
hist(mel_house_data_clean$Car, breaks = 40, xlim = c(0,10), ylim = c(0,4000),xlab = "No. of Carslots", col = "Yellow", main = "Histogram of no. of carslots in houses", las =1)
hist(mel_house_data_clean$Distance, breaks = 40, xlim = c(0,50), ylim = c(0,800),xlab = "Distance", col = "Red", main = "Histogram of Distances", las =1)
hist(mel_house_data_clean$Rooms, breaks = 40, xlim = c(0,10), ylim = c(0,4000),xlab = "No. of Rooms", col = "Green", main = "Histogram of no. of Rooms in houses", las =1)
hist(mel_house_data_clean$Bathroom, breaks = 40, xlim = c(0,10), ylim = c(0,4000),xlab = "No. of Bathrooms", col = "Blue", main = "Histogram of no. of bathrooms in the houses", las =1)
hist(mel_house_data_clean$Car, breaks = 40, xlim = c(0,10), ylim = c(0,4000),xlab = "No. of Carslots", col = "Yellow", main = "Histogram of no. of carslots in houses", las =1)
hist(mel_house_data_clean$Price, main = "Distribution of Price Variable")
require(tidyverse)
require(ISLR)
require(MASS)
mel_data <- read.csv('melbourne_data.csv', header = T, stringsAsFactors = F)
mel_house_data <- data.frame(mel_data, stringsAsFactors = F)
class(mel_house_data)
head(mel_house_data)
View(mel_house_data)
head(mel_house_data)
View(mel_house_data)
colnames(mel_house_data)
str(mel_house_data)
summary(mel_house_data)
library(ggplot2)
mel_house_data <- data.frame(lapply(mel_house_data,function(x) { gsub("#N/A", NA, x) }))
class(mel_house_data)
NA_count_of_each_col<-sapply(mel_house_data,function(x) sum(is.na(x)==TRUE))
NA_count_of_each_col
for(i in 1:ncol(mel_house_data)) {
colName <- colnames(mel_house_data[i])
pctNull <- sum(is.na(mel_house_data[,i]))/length(mel_house_data[,i])
if (pctNull > 0.50) {
print(paste("Column ", colName, " has ", round(pctNull*100, 3), "% of nulls"))
}
}
mel_house_data[,c("BuildingArea","YearBuilt")]<-NULL
mel_house_data_clean<-na.exclude(mel_house_data)
mel_house_data_clean$Type<-as.factor(mel_house_data_clean$Type)
mel_house_data_clean$Propertycount<-as.numeric(mel_house_data_clean$Propertycount)
mel_house_data_clean$Regionname<-as.factor(mel_house_data_clean$Regionname)
mel_house_data_clean$Distance<-as.numeric(mel_house_data_clean$Distance)
mel_house_data_clean$Price<-as.numeric(mel_house_data_clean$Price)
mel_house_data_clean$Landsize <- as.numeric(mel_house_data_clean$Landsize)
mel_house_data_clean$Car <- as.numeric(mel_house_data_clean$Car)
mel_house_data_clean$Bathroom <- as.numeric(mel_house_data_clean$Bathroom)
mel_house_data_clean$Rooms <- as.numeric(mel_house_data_clean$Rooms)
head(mel_house_data_clean)
par(mar=c(3.1,12,4.1,2.1), mgp = c(11, 1, 0))
boxplot(mel_house_data_clean$Price ~ mel_house_data_clean$Regionname,horizontal = TRUE,  ylab = "Region Name", xlab = "Price of houses", main = "Boxplot of price of houses by region", las = 1)
boxplot(mel_house_data_clean$Distance ~ mel_house_data_clean$Type, horizontal = TRUE, ylab = "Type of House", xlab = "Distance", main = "Boxplot of distance vs type of houses", las = 1)
colnames(mel_house_data_clean)
str(mel_house_data_clean)
summary(mel_house_data_clean)
pie(table(mel_house_data_clean$Type),
labels=table(mel_house_data_clean$Type),
main="House type Breakdown",
col=c("red","green","blue"),
border="brown",
clockwise=TRUE
)
ggplot(data =mel_house_data_clean) +
geom_bar(mapping = aes(x = Rooms),position = "dodge")
plot(x = mel_house_data_clean$Price,y = mel_house_data_clean$Landsize,
xlab = "Price of the house",
ylab = "LandSize of the house",
main = "Price vs LandSize"
)
hist(mel_house_data_clean$Distance, breaks = 40, xlim = c(0,50), ylim = c(0,800),xlab = "Distance", col = "Red", main = "Histogram of Distances", las =1)
hist(mel_house_data_clean$Rooms, breaks = 40, xlim = c(0,10), ylim = c(0,4000),xlab = "No. of Rooms", col = "Green", main = "Histogram of no. of Rooms in houses", las =1)
hist(mel_house_data_clean$Bathroom, breaks = 40, xlim = c(0,10), ylim = c(0,4000),xlab = "No. of Bathrooms", col = "Blue", main = "Histogram of no. of bathrooms in the houses", las =1)
hist(mel_house_data_clean$Car, breaks = 40, xlim = c(0,10), ylim = c(0,4000),xlab = "No. of Carslots", col = "Yellow", main = "Histogram of no. of carslots in houses", las =1)
hist(mel_house_data_clean$Price, main = "Distribution of Price Variable")
low <- mel_house_data_clean%>%filter(Price < 1000)
hist(low$Price, main = "Distribution of low Price houses")
med <- mel_house_data_clean%>%filter(Price > 1000 & Price < 2000)
hist(med$Price, main = "Distribution of medium Price houses")
high <- mel_house_data_clean%>%filter(Price > 2000)
hist(high$Price, main = "Distribution of high Price houses")
boxplot(mel_house_data_clean$Price ~ mel_house_data_clean$Type, horizontal = FALSE,  ylab = "Type of house", xlab = "Price of houses", main = "Boxplot of price of houses by Type", las = 1)
ggplot(data =mel_house_data_clean) +
geom_bar(mapping = aes(x = Regionname, fill = Type),position = "dodge")
library(corrplot)
cor_data<- as.data.frame(mel_house_data_clean[,c(2:7,9,12)])
library(corrplot)
cor_data<- as.data.frame(mel_house_data_clean[,c(2:7,9)])
corrplot(cor(as.matrix(cor_data)), method = "pie", type="lower")
library(corrplot)
cor_data<- as.data.frame(mel_house_data_clean[,c(2:7)])
corrplot(cor(as.matrix(cor_data)), method = "pie", type="lower")
library(corrplot)
cor_data<- as.data.frame(mel_house_data_clean[,c(2:6)])
corrplot(cor(as.matrix(cor_data)), method = "pie", type="lower")
table(mel_house_data_clean$Type)
plot(x = mel_house_data_clean$Price,y = mel_house_data_clean$Landsize,
xlab = "Price of the house",
ylab = "LandSize of the house",
main = "Price vs LandSize",
col = mel_house_data_clean$Type,
legend = c('h','t','u')
)
plot(x = mel_house_data_clean$Price,y = mel_house_data_clean$Landsize,
xlab = "Price of the house",
ylab = "LandSize of the house",
main = "Price vs LandSize",
col = mel_house_data_clean$Type
)
mel_house_data_clean
dim(mel_house_data_clean)
str(mel_house_data_clean)
cor_data<- as.data.frame(mel_house_data_clean[,c(3:8, 10)])
library(corrplot)
cor_data<- as.data.frame(mel_house_data_clean[,c(3:8, 10)])
corrplot(cor(as.matrix(cor_data)), method = "pie", type="lower")
install.packages("tinytex")
knitr::opts_chunk$set(echo = TRUE)
require(tidyverse)
require(ISLR)
require(MASS)
head(mel_house_data)
#View(mel_house_data)
require(tidyverse)
require(ISLR)
require(MASS)
unlink('my_cache', recursive = TRUE)
